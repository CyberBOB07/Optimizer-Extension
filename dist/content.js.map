{"version":3,"file":"content.js","mappings":"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","sources":["webpack://tradingview-optimizer/./src/index.js"],"sourcesContent":["// Функция для получения информации о торговле\r\nfunction getTradingInfo() {\r\n    try {\r\n        // Селектор для символа: кнопка с текущим символом в верхнем тулбаре\r\n        const symbolElement = document.querySelector('[data-name=\"legend-series-item\"] [data-name=\"legend-source-title\"]');\r\n        \r\n        // Селектор для интервала: кнопка с текущим интервалом\r\n        const intervalElement = document.querySelector('button.title-l31H9iuA.accessible-l31H9iuA[aria-label=\"Change interval\"]');\r\n        \r\n        return {\r\n            symbol: symbolElement ? symbolElement.textContent.trim() : 'Не определен',\r\n            interval: intervalElement ? intervalElement.textContent.trim() : 'Не определен'\r\n        };\r\n    } catch (error) {\r\n        console.error('Ошибка получения данных:', error);\r\n        return {\r\n            symbol: 'Ошибка',\r\n            interval: 'Ошибка'\r\n        };\r\n    }\r\n}\r\n\r\n// Глобальные переменные\r\nlet infoWindow = null;\r\nlet isStrategySettingsDetected = false;\r\nlet isTrackingMode = false;\r\nlet strategySettingsSelector = '';\r\nlet strategyButtonIndex = -1;\r\nlet updateInterval = null;\r\n\r\n// Константы для селекторов\r\nconst DEFAULT_SETTINGS_BUTTON_SELECTOR = '#bottom-area .backtesting .strategyGroup-zf0MHBzY .fixedContent-zf0MHBzY button.lightButton-bYDQcOkp.ghost-PVWoXu5j.gray-PVWoXu5j';\r\n\r\n// Функция создания информационного окна\r\nfunction createInfoWindow() {\r\n    const infoWindow = document.createElement('div');\r\n    infoWindow.id = 'tv-optimizer-info';\r\n    \r\n    // Добавляем стили\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n        #tv-optimizer-info {\r\n            position: fixed;\r\n            top: 50px;\r\n            right: 200px;\r\n            background: #131722;\r\n            color: #d1d4dc;\r\n            padding: 10px;\r\n            border-radius: 4px;\r\n            z-index: 9999;\r\n            font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif;\r\n            user-select: none;\r\n            cursor: move;\r\n            border: 1px solid #363c4e;\r\n            min-width: 200px;\r\n        }\r\n        .tv-optimizer-button {\r\n            margin-top: 8px;\r\n            padding: 6px 10px;\r\n            background: #2962ff;\r\n            border: none;\r\n            border-radius: 4px;\r\n            color: white;\r\n            cursor: pointer;\r\n            width: 100%;\r\n            font-size: 11px;\r\n            transition: background 0.2s;\r\n        }\r\n        .tv-optimizer-button:hover {\r\n            background: #1e4bd8;\r\n        }\r\n    `;\r\n    document.head.appendChild(style);\r\n    \r\n    // Обновляем содержимое окна\r\n    updateInfoWindow(infoWindow);\r\n    \r\n    // Добавляем окно на страницу\r\n    document.body.appendChild(infoWindow);\r\n    \r\n    // Делаем окно перетаскиваемым\r\n    makeWindowDraggable(infoWindow);\r\n    \r\n    // Восстанавливаем позицию и состояние\r\n    chrome.storage.local.get(['windowPosition', 'strategySettingsDetected', 'strategySettingsSelector', 'strategyButtonIndex'], (result) => {\r\n        if (result.windowPosition) {\r\n            infoWindow.style.top = result.windowPosition.top;\r\n            infoWindow.style.right = result.windowPosition.right;\r\n        }\r\n        if (result.strategySettingsDetected) {\r\n            isStrategySettingsDetected = true;\r\n            strategySettingsSelector = result.strategySettingsSelector;\r\n            strategyButtonIndex = result.strategyButtonIndex;\r\n            updateInfoWindow(infoWindow);\r\n        }\r\n    });\r\n    \r\n    // Запускаем автообновление\r\n    if (updateInterval) {\r\n        clearInterval(updateInterval);\r\n    }\r\n    updateInterval = setInterval(() => {\r\n        console.log('Auto-updating info window');\r\n        updateInfoWindow(infoWindow);\r\n    }, 2000);\r\n    \r\n    return infoWindow;\r\n}\r\n\r\n// Функция обновления содержимого окна\r\nfunction updateInfoWindow(window = infoWindow) {\r\n    console.log('updateInfoWindow called', {\r\n        window: window,\r\n        isStrategySettingsDetected: isStrategySettingsDetected,\r\n        isTrackingMode: isTrackingMode,\r\n        strategySettingsSelector: strategySettingsSelector,\r\n        strategyButtonIndex: strategyButtonIndex\r\n    });\r\n    \r\n    if (!window) {\r\n        console.log('No window to update');\r\n        return;\r\n    }\r\n    \r\n    const info = getTradingInfo();\r\n    window.innerHTML = `\r\n        <div class=\"content\">\r\n            <div style=\"margin-bottom: 4px;\">TradingView Optimizer</div>\r\n            <div style=\"font-size: 11px; opacity: 0.8;\">\r\n                <div>Символ: ${info.symbol}</div>\r\n                <div>Интервал: ${info.interval}</div>\r\n                <div>Settings: ${isStrategySettingsDetected ? '✅' : '❌'}</div>\r\n                <div>Tracking: ${isTrackingMode ? '🔍' : '⏸️'}</div>\r\n            </div>\r\n            ${!isStrategySettingsDetected ? `\r\n                <button class=\"tv-optimizer-button\" id=\"trackButton\">\r\n                    ${isTrackingMode ? 'Отмена отслеживания' : 'Определить кнопку настроек'}\r\n                </button>\r\n            ` : `\r\n                <div style=\"display: flex; gap: 4px; align-items: center;\">\r\n                    <button class=\"tv-optimizer-button\" id=\"openSettingsButton\">\r\n                        Открыть настройки стратегии\r\n                    </button>\r\n                    <button class=\"tv-optimizer-button\" id=\"resetButton\" style=\"padding: 4px 8px; min-width: auto;\" title=\"Определить кнопку заново\">\r\n                        🔄\r\n                    </button>\r\n                </div>\r\n            `}\r\n        </div>\r\n    `;\r\n    \r\n    console.log('Window HTML updated');\r\n    \r\n    // Добавляем обработчики для кнопок\r\n    if (!isStrategySettingsDetected) {\r\n        const trackButton = window.querySelector('#trackButton');\r\n        if (trackButton) {\r\n            console.log('Adding track button handler');\r\n            trackButton.addEventListener('click', () => {\r\n                toggleTrackingMode(!isTrackingMode);\r\n            });\r\n        }\r\n    } else {\r\n        const openSettingsButton = window.querySelector('#openSettingsButton');\r\n        if (openSettingsButton) {\r\n            console.log('Adding settings button handler');\r\n            openSettingsButton.addEventListener('click', openStrategySettings);\r\n        }\r\n        \r\n        // Добавляем обработчик для кнопки сброса\r\n        const resetButton = window.querySelector('#resetButton');\r\n        if (resetButton) {\r\n            console.log('Adding reset button handler');\r\n            resetButton.addEventListener('click', resetSettings);\r\n        }\r\n    }\r\n    \r\n    console.log('Window update complete');\r\n}\r\n\r\n// Структура для хранения результатов бэктеста\r\nlet backtestResults = {\r\n    netProfit: null,\r\n    totalTrades: null,\r\n    percentProfitable: null,\r\n    profitFactor: null,\r\n    maxDrawdown: null,\r\n    netProfitPercent: null,\r\n    maxDrawdownPercent: null\r\n};\r\n\r\n// Функция для парсинга результатов бэктеста\r\nfunction parseBacktestResults() {\r\n    try {\r\n        const cells = document.querySelectorAll('.containerCell-Yvm0jjs7');\r\n        if (!cells || cells.length === 0) {\r\n            console.log('Ячейки с результатами не найдены');\r\n            return null;\r\n        }\r\n\r\n        cells.forEach(cell => {\r\n            const titleElement = cell.querySelector('.title-Yvm0jjs7');\r\n            const secondRow = cell.querySelector('.secondRow-Yvm0jjs7');\r\n            \r\n            if (!titleElement || !secondRow) return;\r\n            \r\n            const title = titleElement.textContent.trim();\r\n            \r\n            switch (title) {\r\n                case 'Net Profit': {\r\n                    const value = secondRow.querySelector('.positiveValue-Yvm0jjs7')?.textContent?.trim();\r\n                    const percent = secondRow.querySelector('.additionalPercent-Yvm0jjs7')?.textContent?.trim();\r\n                    backtestResults.netProfit = value;\r\n                    backtestResults.netProfitPercent = percent;\r\n                    break;\r\n                }\r\n                case 'Total Closed Trades': {\r\n                    const value = secondRow.querySelector('div:first-child')?.textContent?.trim();\r\n                    backtestResults.totalTrades = value;\r\n                    break;\r\n                }\r\n                case 'Percent Profitable': {\r\n                    const value = secondRow.querySelector('.positiveValue-Yvm0jjs7')?.textContent?.trim();\r\n                    backtestResults.percentProfitable = value;\r\n                    break;\r\n                }\r\n                case 'Profit Factor': {\r\n                    const value = secondRow.querySelector('.positiveValue-Yvm0jjs7')?.textContent?.trim();\r\n                    backtestResults.profitFactor = value;\r\n                    break;\r\n                }\r\n                case 'Max Drawdown': {\r\n                    const value = secondRow.querySelector('.negativeValue-Yvm0jjs7')?.textContent?.trim();\r\n                    const percent = secondRow.querySelector('.additionalPercent-Yvm0jjs7')?.textContent?.trim();\r\n                    backtestResults.maxDrawdown = value;\r\n                    backtestResults.maxDrawdownPercent = percent;\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n\r\n        console.log('Результаты парсинга:', backtestResults);\r\n        return backtestResults;\r\n    } catch (error) {\r\n        console.error('Ошибка при парсинге результатов:', error);\r\n        return null;\r\n    }\r\n}\r\n\r\n// Обновляем функцию updateInfoWindow, добавляя результаты бэктеста\r\nconst originalUpdateInfoWindow = updateInfoWindow;\r\nupdateInfoWindow = function(window = infoWindow) {\r\n    // Сначала вызываем оригинальную функцию\r\n    originalUpdateInfoWindow(window);\r\n    \r\n    // Если окно существует, добавляем результаты бэктеста\r\n    if (window) {\r\n        const content = window.querySelector('.content');\r\n        if (content) {\r\n            // Парсим результаты\r\n            parseBacktestResults();\r\n            \r\n            // Добавляем результаты, если они есть\r\n            if (backtestResults.netProfit) {\r\n                const backtestDiv = document.createElement('div');\r\n                backtestDiv.style.fontSize = '11px';\r\n                backtestDiv.style.opacity = '0.8';\r\n                backtestDiv.style.marginTop = '8px';\r\n                backtestDiv.style.borderTop = '1px solid #363c4e';\r\n                backtestDiv.style.paddingTop = '8px';\r\n                \r\n                const isPositive = !backtestResults.netProfit.includes('-');\r\n                const profitColor = isPositive ? '#089981' : '#f23645';\r\n                \r\n                backtestDiv.innerHTML = `\r\n                    <div style=\"margin-bottom: 4px; font-weight: bold;\">Результаты бэктеста:</div>\r\n                    <div style=\"color: ${profitColor}\">Прибыль: ${backtestResults.netProfit} (${backtestResults.netProfitPercent})</div>\r\n                    <div>Сделок: ${backtestResults.totalTrades}</div>\r\n                    <div>Прибыльных: ${backtestResults.percentProfitable}</div>\r\n                    <div>П/Ф: ${backtestResults.profitFactor}</div>\r\n                    <div style=\"color: #f23645\">Просадка: ${backtestResults.maxDrawdown} (${backtestResults.maxDrawdownPercent})</div>\r\n                `;\r\n                \r\n                content.appendChild(backtestDiv);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n// Функция проверки доступности кнопки настроек\r\nfunction checkDefaultSettingsButton() {\r\n    console.log('Checking default settings button');\r\n    const defaultButton = document.querySelector(DEFAULT_SETTINGS_BUTTON_SELECTOR);\r\n    console.log('Default button found:', defaultButton);\r\n    \r\n    if (defaultButton) {\r\n        // Сохраняем эту кнопку как основную\r\n        strategySettingsSelector = DEFAULT_SETTINGS_BUTTON_SELECTOR;\r\n        strategyButtonIndex = 0; // Эта кнопка всегда одна\r\n        isStrategySettingsDetected = true;\r\n        \r\n        // Сохраняем в storage\r\n        chrome.storage.local.set({\r\n            strategySettingsDetected: true,\r\n            strategySettingsSelector: strategySettingsSelector,\r\n            strategyButtonIndex: strategyButtonIndex\r\n        }, () => {\r\n            console.log('Default settings button saved');\r\n            updateInfoWindow();\r\n        });\r\n        \r\n        return true;\r\n    }\r\n    \r\n    return false;\r\n}\r\n\r\n// Функция для открытия настроек стратегии\r\nfunction openStrategySettings() {\r\n    console.log('Trying to open strategy settings');\r\n    \r\n    // Пробуем найти кнопку по основному селектору\r\n    const defaultButton = document.querySelector(DEFAULT_SETTINGS_BUTTON_SELECTOR);\r\n    console.log('Default settings button:', defaultButton);\r\n    \r\n    if (defaultButton) {\r\n        console.log('Using default settings button');\r\n        simulateClick(defaultButton);\r\n        return true;\r\n    }\r\n    \r\n    // Если не нашли, используем сохраненную кнопку\r\n    if (strategySettingsSelector && strategySettingsSelector !== DEFAULT_SETTINGS_BUTTON_SELECTOR) {\r\n        console.log('Trying to find settings button with selector:', strategySettingsSelector, 'index:', strategyButtonIndex);\r\n        const allButtons = Array.from(document.querySelectorAll(strategySettingsSelector));\r\n        console.log('Found buttons:', allButtons.length);\r\n        \r\n        if (allButtons.length > strategyButtonIndex) {\r\n            const settingsButton = allButtons[strategyButtonIndex];\r\n            console.log('Using saved button:', settingsButton);\r\n            simulateClick(settingsButton);\r\n            return true;\r\n        }\r\n    }\r\n    \r\n    // Если не нашли ни одну кнопку, показываем сообщение и включаем отслеживание\r\n    showNotification('Кнопка не найдена. Включаю режим отслеживания 🔍');\r\n    toggleTrackingMode(true);\r\n    return false;\r\n}\r\n\r\n// Функция сброса настроек\r\nfunction resetSettings() {\r\n    console.log('Resetting settings');\r\n    isStrategySettingsDetected = false;\r\n    strategySettingsSelector = '';\r\n    strategyButtonIndex = -1;\r\n    \r\n    // Сохраняем новое состояние\r\n    chrome.storage.local.set({\r\n        strategySettingsDetected: false,\r\n        strategySettingsSelector: '',\r\n        strategyButtonIndex: -1\r\n    }, () => {\r\n        console.log('Settings reset');\r\n        showNotification('Настройки сброшены ✨');\r\n        // Пересоздаем окно\r\n        if (infoWindow) {\r\n            document.body.removeChild(infoWindow);\r\n        }\r\n        createInfoWindow();\r\n    });\r\n}\r\n\r\n// Функция для симуляции клика\r\nfunction simulateClick(element) {\r\n    console.log('Simulating click on element:', element);\r\n    \r\n    // Пробуем разные способы клика\r\n    try {\r\n        // 1. Создаем и диспатчим событие click\r\n        const clickEvent = new MouseEvent('click', {\r\n            bubbles: true,\r\n            cancelable: true,\r\n            view: window\r\n        });\r\n        element.dispatchEvent(clickEvent);\r\n        \r\n        // 2. Если не сработало, пробуем mousedown/mouseup\r\n        const mouseDownEvent = new MouseEvent('mousedown', {\r\n            bubbles: true,\r\n            cancelable: true,\r\n            view: window\r\n        });\r\n        const mouseUpEvent = new MouseEvent('mouseup', {\r\n            bubbles: true,\r\n            cancelable: true,\r\n            view: window\r\n        });\r\n        element.dispatchEvent(mouseDownEvent);\r\n        element.dispatchEvent(mouseUpEvent);\r\n        \r\n        // 3. Пробуем программный клик\r\n        element.click();\r\n        \r\n    } catch (error) {\r\n        console.error('Error simulating click:', error);\r\n    }\r\n}\r\n\r\n// Функция для перетаскивания окна\r\nfunction makeWindowDraggable(window) {\r\n    let isDragging = false;\r\n    let currentX;\r\n    let currentY;\r\n    let initialX;\r\n    let initialY;\r\n    let xOffset = 0;\r\n    let yOffset = 0;\r\n    \r\n    function dragStart(e) {\r\n        if (e.type === \"touchstart\") {\r\n            initialX = e.touches[0].clientX - xOffset;\r\n            initialY = e.touches[0].clientY - yOffset;\r\n        } else {\r\n            initialX = e.clientX - xOffset;\r\n            initialY = e.clientY - yOffset;\r\n        }\r\n        \r\n        if (e.target === window) {\r\n            isDragging = true;\r\n        }\r\n    }\r\n    \r\n    function dragEnd() {\r\n        if (!isDragging) return;\r\n        \r\n        initialX = currentX;\r\n        initialY = currentY;\r\n        isDragging = false;\r\n        \r\n        // Сохраняем позицию\r\n        chrome.storage.local.set({\r\n            windowPosition: {\r\n                top: window.style.top,\r\n                right: window.style.right\r\n            }\r\n        });\r\n    }\r\n    \r\n    function drag(e) {\r\n        if (!isDragging) return;\r\n        \r\n        e.preventDefault();\r\n        \r\n        if (e.type === \"touchmove\") {\r\n            currentX = e.touches[0].clientX - initialX;\r\n            currentY = e.touches[0].clientY - initialY;\r\n        } else {\r\n            currentX = e.clientX - initialX;\r\n            currentY = e.clientY - initialY;\r\n        }\r\n        \r\n        xOffset = currentX;\r\n        yOffset = currentY;\r\n        window.style.transform = `translate(${currentX}px, ${currentY}px)`;\r\n    }\r\n    \r\n    window.addEventListener(\"touchstart\", dragStart, false);\r\n    window.addEventListener(\"touchend\", dragEnd, false);\r\n    window.addEventListener(\"touchmove\", drag, false);\r\n    window.addEventListener(\"mousedown\", dragStart, false);\r\n    window.addEventListener(\"mouseup\", dragEnd, false);\r\n    window.addEventListener(\"mousemove\", drag, false);\r\n}\r\n\r\n// Функция для включения/выключения режима отслеживания\r\nfunction toggleTrackingMode(enable) {\r\n    console.log('toggleTrackingMode:', enable);\r\n    isTrackingMode = enable;\r\n    \r\n    if (enable) {\r\n        // Добавляем обработчики на все этапы клика\r\n        document.addEventListener('mousedown', detectStrategySettings, true);\r\n        document.addEventListener('mouseup', detectStrategySettings, true);\r\n        document.addEventListener('click', detectStrategySettings, true);\r\n        showNotification('Нажмите кнопку настроек стратегии 🎯');\r\n    } else {\r\n        // Удаляем все обработчики\r\n        document.removeEventListener('mousedown', detectStrategySettings, true);\r\n        document.removeEventListener('mouseup', detectStrategySettings, true);\r\n        document.removeEventListener('click', detectStrategySettings, true);\r\n        showNotification('Отслеживание отменено ⏸️');\r\n    }\r\n    \r\n    updateInfoWindow();\r\n}\r\n\r\n// Функция для отслеживания клика по кнопке настроек\r\nfunction detectStrategySettings(event) {\r\n    console.log('detectStrategySettings called, tracking mode:', isTrackingMode);\r\n    \r\n    if (!isTrackingMode) return;\r\n    \r\n    const target = event.target;\r\n    console.log('Click target:', target);\r\n    console.log('Target attributes:', {\r\n        class: target.className,\r\n        dataName: target.getAttribute('data-name'),\r\n        role: target.getAttribute('role'),\r\n        ariaLabel: target.getAttribute('aria-label'),\r\n        innerHTML: target.innerHTML\r\n    });\r\n    \r\n    // Ищем кнопку настроек по разным селекторам\r\n    const settingsButton = target.closest('button.lightButton-bYDQcOkp.ghost-PVWoXu5j.gray-PVWoXu5j, [data-name=\"legend-settings-action\"]');\r\n    console.log('Found settings button:', settingsButton);\r\n    \r\n    if (settingsButton) {\r\n        // Полностью останавливаем событие на этапе перехвата\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        event.stopImmediatePropagation();\r\n        event.returnValue = false;\r\n        \r\n        // Сохраняем селектор\r\n        if (settingsButton.matches('button.lightButton-bYDQcOkp.ghost-PVWoXu5j.gray-PVWoXu5j')) {\r\n            strategySettingsSelector = 'button.lightButton-bYDQcOkp.ghost-PVWoXu5j.gray-PVWoXu5j';\r\n        } else {\r\n            strategySettingsSelector = '[data-name=\"legend-settings-action\"]';\r\n        }\r\n        \r\n        // Находим индекс кнопки\r\n        const allButtons = Array.from(document.querySelectorAll(strategySettingsSelector));\r\n        const buttonIndex = allButtons.indexOf(settingsButton);\r\n        console.log('Button index:', buttonIndex, 'of', allButtons.length, 'buttons');\r\n        strategyButtonIndex = buttonIndex;\r\n        \r\n        console.log('Using selector:', strategySettingsSelector, 'with index:', strategyButtonIndex);\r\n        \r\n        // Сначала отключаем отслеживание\r\n        isTrackingMode = false;\r\n        document.removeEventListener('mousedown', detectStrategySettings, true);\r\n        document.removeEventListener('mouseup', detectStrategySettings, true);\r\n        document.removeEventListener('click', detectStrategySettings, true);\r\n        \r\n        // Затем сохраняем информацию и обновляем состояние\r\n        console.log('Setting isStrategySettingsDetected to true');\r\n        isStrategySettingsDetected = true;\r\n        \r\n        // Принудительно пересоздаем окно\r\n        console.log('Recreating info window...');\r\n        if (infoWindow) {\r\n            document.body.removeChild(infoWindow);\r\n        }\r\n        createInfoWindow();\r\n        \r\n        // И только потом сохраняем в storage\r\n        chrome.storage.local.set({\r\n            strategySettingsDetected: true,\r\n            strategySettingsSelector: strategySettingsSelector,\r\n            strategyButtonIndex: strategyButtonIndex\r\n        }, () => {\r\n            console.log('Settings saved to storage');\r\n            showNotification('Кнопка настроек успешно определена! ✅');\r\n        });\r\n        \r\n        return false;\r\n    }\r\n}\r\n\r\n// Функция для показа уведомления\r\nfunction showNotification(message) {\r\n    const notification = document.createElement('div');\r\n    notification.style.cssText = `\r\n        position: fixed;\r\n        top: 20px;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        background: #131722;\r\n        color: #d1d4dc;\r\n        padding: 10px 20px;\r\n        border-radius: 4px;\r\n        z-index: 9999;\r\n        border: 1px solid #363c4e;\r\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif;\r\n    `;\r\n    notification.textContent = message;\r\n    document.body.appendChild(notification);\r\n    \r\n    setTimeout(() => {\r\n        notification.remove();\r\n    }, 3000);\r\n}\r\n\r\n// Функции управления окном\r\nfunction showInfoWindow() {\r\n    if (!infoWindow) {\r\n        infoWindow = createInfoWindow();\r\n    }\r\n}\r\n\r\nfunction hideInfoWindow() {\r\n    if (infoWindow) {\r\n        if (updateInterval) {\r\n            clearInterval(updateInterval);\r\n            updateInterval = null;\r\n        }\r\n        infoWindow.remove();\r\n        infoWindow = null;\r\n    }\r\n}\r\n\r\n// Слушаем сообщения от popup\r\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\r\n    if (request.type === 'GET_TRADING_INFO') {\r\n        sendResponse(getTradingInfo());\r\n    } else if (request.type === 'TOGGLE_INFO_WINDOW') {\r\n        if (request.show) {\r\n            showInfoWindow();\r\n        } else {\r\n            hideInfoWindow();\r\n        }\r\n    }\r\n    return true;\r\n});\r\n\r\n// При инициализации проверяем наличие кнопки\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    console.log('DOM loaded, checking settings button');\r\n    \r\n    // Даем странице время загрузиться полностью\r\n    setTimeout(() => {\r\n        if (!isStrategySettingsDetected) {\r\n            checkDefaultSettingsButton();\r\n        }\r\n    }, 2000);\r\n});\r\n\r\n// Периодически проверяем наличие кнопки\r\nsetInterval(() => {\r\n    if (!isStrategySettingsDetected) {\r\n        checkDefaultSettingsButton();\r\n    }\r\n}, 5000);\r\n\r\n// При инициализации восстанавливаем сохраненные данные\r\nchrome.storage.local.get(['strategySettingsDetected', 'strategySettingsSelector', 'strategyButtonIndex'], (result) => {\r\n    console.log('Loaded storage:', result);\r\n    if (result.strategySettingsDetected) {\r\n        isStrategySettingsDetected = true;\r\n        strategySettingsSelector = result.strategySettingsSelector;\r\n        strategyButtonIndex = result.strategyButtonIndex;\r\n        console.log('Restored settings selector:', strategySettingsSelector, 'with index:', strategyButtonIndex);\r\n    }\r\n});\r\n\r\n// Создаем MutationObserver для отслеживания изменений в результатах бэктеста\r\nconst backtestObserver = new MutationObserver(() => {\r\n    if (infoWindow) {\r\n        updateInfoWindow();\r\n    }\r\n});\r\n\r\n// Функция для запуска наблюдения за результатами бэктеста\r\nfunction observeBacktestResults() {\r\n    const resultsContainer = document.querySelector('.backtesting-content');\r\n    if (resultsContainer) {\r\n        backtestObserver.observe(resultsContainer, {\r\n            childList: true,\r\n            subtree: true,\r\n            characterData: true\r\n        });\r\n    }\r\n}\r\n\r\n// Запускаем наблюдение при загрузке страницы\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    setTimeout(observeBacktestResults, 2000);\r\n});\r\n\r\n// Периодически проверяем наличие контейнера с результатами\r\nsetInterval(() => {\r\n    observeBacktestResults();\r\n}, 5000);\r\n"],"names":["getTradingInfo","symbolElement","document","querySelector","intervalElement","symbol","textContent","trim","interval","error","console","infoWindow","isStrategySettingsDetected","isTrackingMode","strategySettingsSelector","strategyButtonIndex","updateInterval","DEFAULT_SETTINGS_BUTTON_SELECTOR","createInfoWindow","createElement","id","style","head","appendChild","updateInfoWindow","body","window","currentX","currentY","initialX","initialY","isDragging","xOffset","yOffset","dragStart","e","type","touches","clientX","clientY","target","dragEnd","chrome","storage","local","set","windowPosition","top","right","drag","preventDefault","transform","concat","addEventListener","makeWindowDraggable","get","result","strategySettingsDetected","clearInterval","setInterval","log","arguments","length","undefined","info","innerHTML","openSettingsButton","openStrategySettings","resetButton","resetSettings","trackButton","toggleTrackingMode","backtestResults","netProfit","totalTrades","percentProfitable","profitFactor","maxDrawdown","netProfitPercent","maxDrawdownPercent","originalUpdateInfoWindow","checkDefaultSettingsButton","defaultButton","simulateClick","allButtons","Array","from","querySelectorAll","settingsButton","showNotification","removeChild","element","clickEvent","MouseEvent","bubbles","cancelable","view","dispatchEvent","mouseDownEvent","mouseUpEvent","click","enable","detectStrategySettings","removeEventListener","event","class","className","dataName","getAttribute","role","ariaLabel","closest","stopPropagation","stopImmediatePropagation","returnValue","matches","buttonIndex","indexOf","message","notification","cssText","setTimeout","remove","content","cells","forEach","cell","titleElement","secondRow","_secondRow$querySelec","_secondRow$querySelec2","value","percent","_secondRow$querySelec3","_secondRow$querySelec4","_secondRow$querySelec5","_secondRow$querySelec6","_secondRow$querySelec7","parseBacktestResults","backtestDiv","fontSize","opacity","marginTop","borderTop","paddingTop","profitColor","includes","runtime","onMessage","addListener","request","sender","sendResponse","show","backtestObserver","MutationObserver","observeBacktestResults","resultsContainer","observe","childList","subtree","characterData"],"sourceRoot":""}