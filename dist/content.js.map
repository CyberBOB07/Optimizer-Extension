{"version":3,"file":"content.js","mappings":"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","sources":["webpack://tradingview-optimizer/./src/index.js"],"sourcesContent":["// Функция создания информационного окна\nfunction createInfoWindow() {\n    const window = document.createElement('div');\n    window.className = 'tv-optimizer-window';\n    window.style.cssText = `\n        position: fixed;\n        top: 50px;\n        right: 50px;\n        background: #131722;\n        color: #d1d4dc;\n        border: 1px solid #363c4e;\n        border-radius: 3px;\n        padding: 8px;\n        z-index: 999;\n        min-width: 200px;\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n        font-size: 12px;\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif;\n        user-select: none;\n    `;\n    \n    document.body.appendChild(window);\n    infoWindow = window;\n    updateInfoWindow(window);\n    makeWindowDraggable(window);\n    \n    return window;\n}\n\n// Функция обновления содержимого окна\nfunction updateInfoWindow(window = infoWindow) {\n    if (!window) {\n        console.log('No window to update');\n        return;\n    }\n    \n    const info = getTradingInfo();\n\n    window.innerHTML = `\n        <div class=\"content\">\n            <div style=\"margin-bottom: 4px; color: #d1d4dc;\">TradingView Optimizer</div>\n            <div style=\"font-size: 11px; opacity: 0.8; color: #787b86;\">\n                <div>Symbol: ${info.symbol}</div>\n                <div>Interval: ${info.interval}</div>\n                <div>Settings: ${isStrategySettingsDetected ? '✅' : '❌'}</div>\n                <div>Tracking: ${isTrackingMode ? '🔍' : '⏸️'}</div>\n            </div>\n            ${!isStrategySettingsDetected ? `\n                <button class=\"tv-optimizer-button\" id=\"trackButton\" style=\"\n                    background: #2962ff;\n                    color: #fff;\n                    border: none;\n                    border-radius: 4px;\n                    padding: 6px 12px;\n                    margin-top: 8px;\n                    cursor: pointer;\n                    font-size: 12px;\n                \">\n                    ${isTrackingMode ? 'Cancel Tracking' : 'Detect Settings Button'}\n                </button>\n            ` : `\n                <div style=\"display: flex; gap: 4px; align-items: center; margin-top: 8px;\">\n                    <button class=\"tv-optimizer-button\" id=\"openSettingsButton\" style=\"\n                        background: #2962ff;\n                        color: #fff;\n                        border: none;\n                        border-radius: 4px;\n                        padding: 6px 12px;\n                        cursor: pointer;\n                        font-size: 12px;\n                    \">\n                        Open Strategy Settings\n                    </button>\n                    <button class=\"tv-optimizer-button\" id=\"resetButton\" style=\"\n                        padding: 4px 8px;\n                        min-width: auto;\n                        background: #364250;\n                        color: #d1d4dc;\n                        border: 1px solid #4c525e;\n                        border-radius: 4px;\n                        cursor: pointer;\n                        font-size: 12px;\n                    \" title=\"Detect button again\">\n                        🔄\n                    </button>\n                </div>\n            `}\n            ${backtestResults.netProfit !== null ? `\n                <div class=\"backtest-results\" style=\"\n                    margin-top: 8px;\n                    padding-top: 8px;\n                    border-top: 1px solid #363c4e;\n                \">\n                    <div class=\"result-item\" style=\"margin: 4px 0;\">\n                        <span class=\"label\" style=\"color: #787b86;\">Net Profit:</span>\n                        <span class=\"value ${getValueClass(backtestResults.netProfit)}\" style=\"\n                            color: ${getValueClass(backtestResults.netProfit) === 'positive' ? '#089981' : \n                                   getValueClass(backtestResults.netProfit) === 'negative' ? '#f23645' : '#d1d4dc'}\n                        \">\n                            ${formatUSDT(backtestResults.netProfit)}\n                            ${backtestResults.netProfitPercent ? `(${formatPercent(backtestResults.netProfitPercent)})` : ''}\n                        </span>\n                    </div>\n                    <div class=\"result-item\" style=\"margin: 4px 0;\">\n                        <span class=\"label\" style=\"color: #787b86;\">Total Closed Trades:</span>\n                        <span class=\"value\" style=\"color: #d1d4dc;\">${backtestResults.totalTrades || '—'}</span>\n                    </div>\n                    <div class=\"result-item\" style=\"margin: 4px 0;\">\n                        <span class=\"label\" style=\"color: #787b86;\">Percent Profitable:</span>\n                        <span class=\"value\" style=\"color: #d1d4dc;\">${formatPercent(backtestResults.percentProfitable)}</span>\n                    </div>\n                    <div class=\"result-item\" style=\"margin: 4px 0;\">\n                        <span class=\"label\" style=\"color: #787b86;\">Profit Factor:</span>\n                        <span class=\"value ${getValueClass(backtestResults.profitFactor - 1)}\" style=\"\n                            color: ${getValueClass(backtestResults.profitFactor - 1) === 'positive' ? '#089981' : \n                                   getValueClass(backtestResults.profitFactor - 1) === 'negative' ? '#f23645' : '#d1d4dc'}\n                        \">${formatNumber(backtestResults.profitFactor)}</span>\n                    </div>\n                    <div class=\"result-item\" style=\"margin: 4px 0;\">\n                        <span class=\"label\" style=\"color: #787b86;\">Max Drawdown:</span>\n                        <span class=\"value ${getValueClass(-backtestResults.maxDrawdown)}\" style=\"\n                            color: ${getValueClass(-backtestResults.maxDrawdown) === 'positive' ? '#089981' : \n                                   getValueClass(-backtestResults.maxDrawdown) === 'negative' ? '#f23645' : '#d1d4dc'}\n                        \">\n                            ${formatUSDT(backtestResults.maxDrawdown)}\n                            ${backtestResults.maxDrawdownPercent ? `(${formatPercent(backtestResults.maxDrawdownPercent)})` : ''}\n                        </span>\n                    </div>\n                    <div class=\"result-item\" style=\"margin: 4px 0;\">\n                        <span class=\"label\" style=\"color: #787b86;\">Avg Trade:</span>\n                        <span class=\"value ${getValueClass(backtestResults.avgTrade)}\" style=\"\n                            color: ${getValueClass(backtestResults.avgTrade) === 'positive' ? '#089981' : \n                                   getValueClass(backtestResults.avgTrade) === 'negative' ? '#f23645' : '#d1d4dc'}\n                        \">\n                            ${formatUSDT(backtestResults.avgTrade)}\n                            ${backtestResults.avgTradePercent ? `(${formatPercent(backtestResults.avgTradePercent)})` : ''}\n                        </span>\n                    </div>\n                    <div class=\"result-item\" style=\"margin: 4px 0;\">\n                        <span class=\"label\" style=\"color: #787b86;\">Avg # Bars in Trades:</span>\n                        <span class=\"value\" style=\"color: #d1d4dc;\">${formatNumber(backtestResults.avgBarsInTrade, 0)}</span>\n                    </div>\n                </div>\n            ` : ''}\n        </div>\n    `;\n    \n    // Добавляем обработчики для кнопок\n    if (!isStrategySettingsDetected) {\n        const trackButton = window.querySelector('#trackButton');\n        if (trackButton) {\n            trackButton.addEventListener('click', () => {\n                toggleTrackingMode(!isTrackingMode);\n            });\n        }\n    } else {\n        const openSettingsButton = window.querySelector('#openSettingsButton');\n        if (openSettingsButton) {\n            openSettingsButton.addEventListener('click', openStrategySettings);\n        }\n        \n        const resetButton = window.querySelector('#resetButton');\n        if (resetButton) {\n            resetButton.addEventListener('click', resetSettings);\n        }\n    }\n\n    // Делаем окно перетаскиваемым\n    makeWindowDraggable(window);\n}\n\n// Функция для получения информации о торговле\nfunction getTradingInfo() {\n    try {\n        // Селектор для символа: кнопка с текущим символом в верхнем тулбаре\n        const symbolElement = document.querySelector('[data-name=\"legend-series-item\"] [data-name=\"legend-source-title\"]');\n        \n        // Селектор для интервала: кнопка с текущим интервалом\n        const intervalElement = document.querySelector('button.title-l31H9iuA.accessible-l31H9iuA[aria-label=\"Change interval\"]');\n        \n        return {\n            symbol: symbolElement ? symbolElement.textContent.trim() : 'Не определен',\n            interval: intervalElement ? intervalElement.textContent.trim() : 'Не определен'\n        };\n    } catch (error) {\n        console.error('Ошибка получения данных:', error);\n        return {\n            symbol: 'Ошибка',\n            interval: 'Ошибка'\n        };\n    }\n}\n\n// Глобальные переменные\nlet infoWindow = null;\nlet isTrackingMode = false;\nlet isStrategySettingsDetected = false;\nlet strategySettingsSelector = '';\nlet strategyButtonIndex = -1;\nconst DEFAULT_SETTINGS_BUTTON_SELECTOR = 'button[title=\"Settings\"].apply-common-tooltip';\n\n// Структура для хранения результатов бэктеста\nlet backtestResults = {\n    netProfit: null,\n    netProfitPercent: null,\n    totalTrades: null,\n    percentProfitable: null,\n    profitFactor: null,\n    maxDrawdown: null,\n    maxDrawdownPercent: null,\n    avgTrade: null,\n    avgTradePercent: null,\n    avgBarsInTrade: null\n};\n\n// Функция парсинга результатов бэктеста\nfunction parseBacktestResults() {\n    console.log('Parsing backtest results');\n    \n    // Проверяем наличие окна\n    if (!infoWindow) {\n        console.log('Creating missing info window');\n        createInfoWindow();\n    }\n    \n    // Находим контейнер с результатами\n    const reportContainer = document.querySelector('.reportContainer-xOy3zRsH');\n    if (!reportContainer) {\n        console.log('Report container not found');\n        return null;\n    }\n\n    const container = reportContainer.querySelector('.container-Yvm0jjs7');\n    if (!container) {\n        console.log('Results container not found in report container');\n        return null;\n    }\n\n    // Функция для извлечения значений по заголовку\n    const getValuesByTitle = (title) => {\n        const cell = Array.from(container.querySelectorAll('.containerCell-Yvm0jjs7'))\n            .find(cell => cell.querySelector('.title-Yvm0jjs7')?.textContent === title);\n            \n        if (!cell) {\n            console.log(`Cell with title \"${title}\" not found`);\n            return { main: null, additional: null };\n        }\n\n        const secondRow = cell.querySelector('.secondRow-Yvm0jjs7');\n        if (!secondRow) {\n            console.log(`Second row not found for \"${title}\"`);\n            return { main: null, additional: null };\n        }\n\n        // Получаем основное значение (первый div)\n        const mainDiv = secondRow.querySelector('div:first-child');\n        const mainValue = mainDiv?.textContent?.trim();\n        \n        // Получаем дополнительное процентное значение (второй div с классом additionalPercent)\n        const additionalDiv = secondRow.querySelector('.additionalPercent-Yvm0jjs7');\n        const additionalValue = additionalDiv?.textContent?.trim();\n\n        console.log(`Found values for ${title}:`, { \n            main: mainValue, \n            mainClass: mainDiv?.className,\n            additional: additionalValue,\n            additionalClass: additionalDiv?.className\n        });\n        \n        return { main: mainValue, additional: additionalValue };\n    };\n\n    // Функция для очистки и парсинга числового значения\n    const parseValue = (value, removeUSDT = true) => {\n        if (!value) return null;\n        \n        // Заменяем различные виды минусов на стандартный\n        let cleaned = value.replace(/[\\u2212\\u2013\\u2014−]/g, '-');\n        \n        if (removeUSDT) {\n            cleaned = cleaned.replace(' USDT', '');\n        }\n        \n        cleaned = cleaned.replace('%', '').replace(/,/g, '');\n        const parsed = parseFloat(cleaned);\n        \n        console.log('Parsing value:', { \n            original: value, \n            afterMinusReplacement: cleaned,\n            parsed: parsed,\n            isNaN: isNaN(parsed)\n        });\n        \n        return isNaN(parsed) ? null : parsed;\n    };\n\n    // Извлекаем все значения\n    const netProfit = getValuesByTitle('Net Profit');\n    const totalTrades = getValuesByTitle('Total Closed Trades');\n    const percentProfitable = getValuesByTitle('Percent Profitable');\n    const profitFactor = getValuesByTitle('Profit Factor');\n    const maxDrawdown = getValuesByTitle('Max Drawdown');\n    const avgTrade = getValuesByTitle('Avg Trade');\n    const avgBarsInTrade = getValuesByTitle('Avg # Bars in Trades');\n\n    // Преобразуем значения в числа\n    const results = {\n        netProfit: parseValue(netProfit.main),\n        netProfitPercent: parseValue(netProfit.additional),\n        totalTrades: parseInt(totalTrades.main) || null,\n        percentProfitable: parseValue(percentProfitable.main),\n        profitFactor: parseValue(profitFactor.main),\n        maxDrawdown: parseValue(maxDrawdown.main),\n        maxDrawdownPercent: parseValue(maxDrawdown.additional),\n        avgTrade: parseValue(avgTrade.main),\n        avgTradePercent: parseValue(avgTrade.additional),\n        avgBarsInTrade: parseInt(avgBarsInTrade.main) || null\n    };\n\n    // Проверяем, что хотя бы одно значение не null\n    const hasValidResults = Object.values(results).some(value => value !== null);\n    \n    if (hasValidResults) {\n        console.log('Valid results found:', results);\n        backtestResults = results;\n        \n        // Обновляем окно с новыми результатами\n        if (infoWindow) {\n            console.log('Updating existing info window');\n            updateInfoWindow(infoWindow);\n        } else {\n            console.log('Info window lost, creating new one');\n            createInfoWindow();\n        }\n    } else {\n        console.log('No valid results found');\n    }\n\n    return hasValidResults ? results : null;\n}\n\nfunction formatNumber(num, decimals = 2) {\n    if (num === null || num === undefined || isNaN(num)) return '—';\n    return num.toFixed(decimals);\n}\n\nfunction formatPercent(num) {\n    if (num === null || num === undefined || isNaN(num)) return '—';\n    return `${num.toFixed(2)}%`;\n}\n\nfunction formatUSDT(num) {\n    if (num === null || num === undefined || isNaN(num)) return '—';\n    return `${num.toFixed(2)} USDT`;\n}\n\nfunction getValueClass(num) {\n    if (num === null || num === undefined || isNaN(num)) return '';\n    return num > 0 ? 'positive' : num < 0 ? 'negative' : '';\n}\n\n// Функция проверки доступности кнопки настроек\nfunction checkDefaultSettingsButton() {\n    console.log('Checking default settings button');\n    const defaultButton = document.querySelector(DEFAULT_SETTINGS_BUTTON_SELECTOR);\n    console.log('Default button found:', defaultButton);\n    \n    if (defaultButton) {\n        // Сохраняем эту кнопку как основную\n        strategySettingsSelector = DEFAULT_SETTINGS_BUTTON_SELECTOR;\n        strategyButtonIndex = 0; // Эта кнопка всегда одна\n        isStrategySettingsDetected = true;\n        \n        // Сохраняем в storage\n        chrome.storage.local.set({\n            strategySettingsDetected: true,\n            strategySettingsSelector: strategySettingsSelector,\n            strategyButtonIndex: strategyButtonIndex\n        }, () => {\n            console.log('Default settings button saved');\n            updateInfoWindow();\n        });\n        \n        return true;\n    }\n    \n    return false;\n}\n\n// Функция для открытия настроек стратегии\nfunction openStrategySettings() {\n    console.log('Trying to open strategy settings');\n    \n    // Пробуем найти кнопку по основному селектору\n    const defaultButton = document.querySelector(DEFAULT_SETTINGS_BUTTON_SELECTOR);\n    console.log('Default settings button:', defaultButton);\n    \n    if (defaultButton) {\n        console.log('Using default settings button');\n        simulateClick(defaultButton);\n        return true;\n    }\n    \n    // Если не нашли, используем сохраненную кнопку\n    if (strategySettingsSelector && strategySettingsSelector !== DEFAULT_SETTINGS_BUTTON_SELECTOR) {\n        console.log('Trying to find settings button with selector:', strategySettingsSelector, 'index:', strategyButtonIndex);\n        const allButtons = Array.from(document.querySelectorAll(strategySettingsSelector));\n        console.log('Found buttons:', allButtons.length);\n        \n        if (allButtons.length > strategyButtonIndex) {\n            const settingsButton = allButtons[strategyButtonIndex];\n            console.log('Using saved button:', settingsButton);\n            simulateClick(settingsButton);\n            return true;\n        }\n    }\n    \n    // Если не нашли ни одну кнопку, показываем сообщение и включаем отслеживание\n    showNotification('Кнопка не найдена. Включаю режим отслеживания 🔍');\n    toggleTrackingMode(true);\n    return false;\n}\n\n// Функция сброса настроек\nfunction resetSettings() {\n    console.log('Resetting settings');\n    isStrategySettingsDetected = false;\n    strategySettingsSelector = '';\n    strategyButtonIndex = -1;\n    \n    // Сохраняем новое состояние\n    chrome.storage.local.set({\n        strategySettingsDetected: false,\n        strategySettingsSelector: '',\n        strategyButtonIndex: -1\n    }, () => {\n        console.log('Settings reset');\n        showNotification('Настройки сброшены ✨');\n        // Пересоздаем окно\n        if (infoWindow) {\n            document.body.removeChild(infoWindow);\n        }\n        createInfoWindow();\n    });\n}\n\n// Функция для симуляции клика\nfunction simulateClick(element) {\n    console.log('Simulating click on element:', element);\n    \n    // Пробуем разные способы клика\n    try {\n        // 1. Создаем и диспатчим событие click\n        const clickEvent = new MouseEvent('click', {\n            bubbles: true,\n            cancelable: true,\n            view: window\n        });\n        element.dispatchEvent(clickEvent);\n        \n        // 2. Если не сработало, пробуем mousedown/mouseup\n        const mouseDownEvent = new MouseEvent('mousedown', {\n            bubbles: true,\n            cancelable: true,\n            view: window\n        });\n        const mouseUpEvent = new MouseEvent('mouseup', {\n            bubbles: true,\n            cancelable: true,\n            view: window\n        });\n        element.dispatchEvent(mouseDownEvent);\n        element.dispatchEvent(mouseUpEvent);\n        \n        // 3. Пробуем программный клик\n        element.click();\n        \n    } catch (error) {\n        console.error('Error simulating click:', error);\n    }\n}\n\n// Функция для перетаскивания окна\nfunction makeWindowDraggable(window) {\n    let isDragging = false;\n    let currentX;\n    let currentY;\n    let initialX;\n    let initialY;\n    let xOffset = 0;\n    let yOffset = 0;\n    \n    function dragStart(e) {\n        if (e.type === \"touchstart\") {\n            initialX = e.touches[0].clientX - xOffset;\n            initialY = e.touches[0].clientY - yOffset;\n        } else {\n            initialX = e.clientX - xOffset;\n            initialY = e.clientY - yOffset;\n        }\n        \n        if (e.target === window) {\n            isDragging = true;\n        }\n    }\n    \n    function dragEnd() {\n        if (!isDragging) return;\n        \n        initialX = currentX;\n        initialY = currentY;\n        isDragging = false;\n        \n        // Сохраняем позицию\n        chrome.storage.local.set({\n            windowPosition: {\n                top: window.style.top,\n                right: window.style.right\n            }\n        });\n    }\n    \n    function drag(e) {\n        if (!isDragging) return;\n        \n        e.preventDefault();\n        \n        if (e.type === \"touchmove\") {\n            currentX = e.touches[0].clientX - initialX;\n            currentY = e.touches[0].clientY - initialY;\n        } else {\n            currentX = e.clientX - initialX;\n            currentY = e.clientY - initialY;\n        }\n        \n        xOffset = currentX;\n        yOffset = currentY;\n        window.style.transform = `translate(${currentX}px, ${currentY}px)`;\n    }\n    \n    window.addEventListener(\"touchstart\", dragStart, false);\n    window.addEventListener(\"touchend\", dragEnd, false);\n    window.addEventListener(\"touchmove\", drag, false);\n    window.addEventListener(\"mousedown\", dragStart, false);\n    window.addEventListener(\"mouseup\", dragEnd, false);\n    window.addEventListener(\"mousemove\", drag, false);\n}\n\n// Функция для включения/выключения режима отслеживания\nfunction toggleTrackingMode(enable) {\n    console.log('toggleTrackingMode:', enable);\n    isTrackingMode = enable;\n    \n    if (enable) {\n        // Добавляем обработчики на все этапы клика\n        document.addEventListener('mousedown', detectStrategySettings, true);\n        document.addEventListener('mouseup', detectStrategySettings, true);\n        document.addEventListener('click', detectStrategySettings, true);\n        showNotification('Нажмите кнопку настроек стратегии 🎯');\n    } else {\n        // Удаляем все обработчики\n        document.removeEventListener('mousedown', detectStrategySettings, true);\n        document.removeEventListener('mouseup', detectStrategySettings, true);\n        document.removeEventListener('click', detectStrategySettings, true);\n        showNotification('Отслеживание отменено ⏸️');\n    }\n    \n    updateInfoWindow();\n}\n\n// Функция для отслеживания клика по кнопке настроек\nfunction detectStrategySettings(event) {\n    console.log('detectStrategySettings called, tracking mode:', isTrackingMode);\n    \n    if (!isTrackingMode) return;\n    \n    const target = event.target;\n    console.log('Click target:', target);\n    console.log('Target attributes:', {\n        class: target.className,\n        dataName: target.getAttribute('data-name'),\n        role: target.getAttribute('role'),\n        ariaLabel: target.getAttribute('aria-label'),\n        innerHTML: target.innerHTML\n    });\n    \n    // Ищем кнопку настроек по разным селекторам\n    const settingsButton = target.closest('button.lightButton-bYDQcOkp.ghost-PVWoXu5j.gray-PVWoXu5j, [data-name=\"legend-settings-action\"]');\n    console.log('Found settings button:', settingsButton);\n    \n    if (settingsButton) {\n        // Полностью останавливаем событие на этапе перехвата\n        event.preventDefault();\n        event.stopPropagation();\n        event.stopImmediatePropagation();\n        event.returnValue = false;\n        \n        // Сохраняем селектор\n        if (settingsButton.matches('button.lightButton-bYDQcOkp.ghost-PVWoXu5j.gray-PVWoXu5j')) {\n            strategySettingsSelector = 'button.lightButton-bYDQcOkp.ghost-PVWoXu5j.gray-PVWoXu5j';\n        } else {\n            strategySettingsSelector = '[data-name=\"legend-settings-action\"]';\n        }\n        \n        // Находим индекс кнопки\n        const allButtons = Array.from(document.querySelectorAll(strategySettingsSelector));\n        const buttonIndex = allButtons.indexOf(settingsButton);\n        console.log('Button index:', buttonIndex, 'of', allButtons.length, 'buttons');\n        strategyButtonIndex = buttonIndex;\n        \n        console.log('Using selector:', strategySettingsSelector, 'with index:', strategyButtonIndex);\n        \n        // Сначала отключаем отслеживание\n        isTrackingMode = false;\n        document.removeEventListener('mousedown', detectStrategySettings, true);\n        document.removeEventListener('mouseup', detectStrategySettings, true);\n        document.removeEventListener('click', detectStrategySettings, true);\n        \n        // Затем сохраняем информацию и обновляем состояние\n        console.log('Setting isStrategySettingsDetected to true');\n        isStrategySettingsDetected = true;\n        \n        // Принудительно пересоздаем окно\n        console.log('Recreating info window...');\n        if (infoWindow) {\n            document.body.removeChild(infoWindow);\n        }\n        createInfoWindow();\n        \n        // И только потом сохраняем в storage\n        chrome.storage.local.set({\n            strategySettingsDetected: true,\n            strategySettingsSelector: strategySettingsSelector,\n            strategyButtonIndex: strategyButtonIndex\n        }, () => {\n            console.log('Settings saved to storage');\n            showNotification('Кнопка настроек успешно определена! ✅');\n        });\n        \n        return false;\n    }\n}\n\n// Функция для показа уведомления\nfunction showNotification(message) {\n    const notification = document.createElement('div');\n    notification.style.cssText = `\n        position: fixed;\n        top: 20px;\n        left: 50%;\n        transform: translateX(-50%);\n        background: #131722;\n        color: #d1d4dc;\n        padding: 10px 20px;\n        border-radius: 4px;\n        z-index: 9999;\n        border: 1px solid #363c4e;\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif;\n    `;\n    notification.textContent = message;\n    document.body.appendChild(notification);\n    \n    setTimeout(() => {\n        notification.remove();\n    }, 3000);\n}\n\n// Функции управления окном\nfunction showInfoWindow() {\n    if (!infoWindow) {\n        infoWindow = createInfoWindow();\n    }\n}\n\nfunction hideInfoWindow() {\n    if (infoWindow) {\n        if (updateInterval) {\n            clearInterval(updateInterval);\n            updateInterval = null;\n        }\n        infoWindow.remove();\n        infoWindow = null;\n    }\n}\n\n// Слушаем сообщения от popup\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n    if (request.type === 'GET_TRADING_INFO') {\n        sendResponse(getTradingInfo());\n    } else if (request.type === 'TOGGLE_INFO_WINDOW') {\n        if (request.show) {\n            showInfoWindow();\n        } else {\n            hideInfoWindow();\n        }\n    }\n    return true;\n});\n\n// При инициализации проверяем наличие кнопки\ndocument.addEventListener('DOMContentLoaded', () => {\n    console.log('DOM loaded, checking settings button');\n    \n    // Даем странице время загрузиться полностью\n    setTimeout(() => {\n        if (!isStrategySettingsDetected) {\n            checkDefaultSettingsButton();\n        }\n    }, 2000);\n});\n\n// Периодически проверяем наличие кнопки\nsetInterval(() => {\n    if (!isStrategySettingsDetected) {\n        checkDefaultSettingsButton();\n    }\n}, 5000);\n\n// При инициализации восстанавливаем сохраненные данные\nchrome.storage.local.get(['strategyButtonIndex', 'strategySettingsDetected', 'strategySettingsSelector'], (result) => {\n    console.log('Loaded storage:', result);\n    \n    if (result.strategySettingsDetected) {\n        isStrategySettingsDetected = true;\n        strategySettingsSelector = result.strategySettingsSelector;\n        strategyButtonIndex = result.strategyButtonIndex;\n        console.log('Restored settings selector:', strategySettingsSelector, 'with index:', strategyButtonIndex);\n    }\n    \n    // Создаем информационное окно\n    createInfoWindow();\n    \n    // Запускаем наблюдение за результатами бэктеста\n    observeBacktestResults();\n});\n\n// Функция инициализации\nfunction init() {\n    console.log('Initializing TradingView Optimizer...');\n    \n    chrome.storage.local.get(['strategyButtonIndex', 'strategySettingsDetected', 'strategySettingsSelector'], (result) => {\n        console.log('Loaded storage:', result);\n        \n        if (result.strategySettingsDetected) {\n            isStrategySettingsDetected = true;\n            strategySettingsSelector = result.strategySettingsSelector;\n            strategyButtonIndex = result.strategyButtonIndex;\n            console.log('Restored settings selector:', strategySettingsSelector, 'with index:', strategyButtonIndex);\n        }\n        \n        createInfoWindow();\n        observeBacktestResults();\n    });\n}\n\n// Запускаем инициализацию\ninit();\n\n// Запускаем наблюдение при загрузке страницы\ndocument.addEventListener('DOMContentLoaded', () => {\n    console.log('DOM loaded, starting observers');\n    setTimeout(observeBacktestResults, 2000);\n});\n\n// Функция для запуска наблюдения за результатами бэктеста\nfunction observeBacktestResults() {\n    console.log('Starting backtest results observer');\n    \n    // Функция для поиска контейнера с результатами\n    const findResultsContainer = () => {\n        // Сначала ищем reportContainer\n        const reportContainer = document.querySelector('.reportContainer-xOy3zRsH');\n        if (reportContainer) {\n            console.log('Found report container');\n            return reportContainer;\n        }\n\n        // Если не нашли reportContainer, ищем в bottom-area\n        const bottomArea = document.querySelector('#bottom-area');\n        if (!bottomArea) {\n            console.log('Bottom area not found');\n            return null;\n        }\n\n        // Ищем контейнер с результатами\n        const container = bottomArea.querySelector('.container-Yvm0jjs7');\n        if (!container) {\n            console.log('Results container not found');\n            return null;\n        }\n\n        console.log('Found results container in bottom area');\n        return container;\n    };\n\n    // Функция обработки изменений\n    const handleBacktestUpdate = (mutations) => {\n        console.log('Processing backtest update, mutations:', mutations.length);\n        \n        // Проверяем, есть ли значимые изменения\n        let hasRelevantChanges = false;\n        for (const mutation of mutations) {\n            // Проверяем добавление/удаление узлов\n            if (mutation.type === 'childList') {\n                hasRelevantChanges = true;\n                console.log('Detected DOM structure change');\n                break;\n            }\n            \n            // Проверяем изменение текста\n            if (mutation.type === 'characterData') {\n                const parent = mutation.target.parentElement;\n                if (parent && (\n                    parent.classList.contains('secondRow-Yvm0jjs7') ||\n                    parent.classList.contains('positiveValue-Yvm0jjs7') ||\n                    parent.classList.contains('negativeValue-Yvm0jjs7')\n                )) {\n                    hasRelevantChanges = true;\n                    console.log('Detected value change in:', parent);\n                    break;\n                }\n            }\n        }\n\n        if (hasRelevantChanges) {\n            console.log('Parsing updated results');\n            const results = parseBacktestResults();\n            if (results) {\n                console.log('New results parsed:', results);\n                updateInfoWindow();\n            }\n        }\n    };\n\n    // Создаем наблюдатель\n    const observer = new MutationObserver((mutations) => {\n        // Используем debounce, чтобы не обрабатывать слишком часто\n        clearTimeout(observer.timeout);\n        observer.timeout = setTimeout(() => {\n            handleBacktestUpdate(mutations);\n        }, 100); // Задержка 100мс\n    });\n\n    // Функция для начала наблюдения\n    const startObserving = () => {\n        const container = findResultsContainer();\n        if (container) {\n            console.log('Starting observation of container');\n            observer.observe(container, {\n                childList: true,\n                subtree: true,\n                characterData: true,\n                attributes: false\n            });\n            // Сразу парсим текущие результаты\n            handleBacktestUpdate([{ type: 'childList' }]);\n        } else {\n            console.log('Container not found, retrying in 1 second');\n            setTimeout(startObserving, 1000);\n        }\n    };\n\n    // Запускаем наблюдение\n    startObserving();\n\n    // Возвращаем функцию очистки\n    return () => {\n        console.log('Stopping backtest results observer');\n        clearTimeout(observer.timeout);\n        observer.disconnect();\n    };\n}\n"],"names":["createInfoWindow","window","document","createElement","className","style","cssText","body","appendChild","infoWindow","updateInfoWindow","makeWindowDraggable","arguments","length","undefined","info","getTradingInfo","innerHTML","concat","symbol","interval","isStrategySettingsDetected","isTrackingMode","backtestResults","netProfit","getValueClass","formatUSDT","netProfitPercent","formatPercent","totalTrades","percentProfitable","profitFactor","formatNumber","maxDrawdown","maxDrawdownPercent","avgTrade","avgTradePercent","avgBarsInTrade","openSettingsButton","querySelector","addEventListener","openStrategySettings","resetButton","resetSettings","trackButton","toggleTrackingMode","console","log","symbolElement","intervalElement","textContent","trim","error","strategySettingsSelector","strategyButtonIndex","DEFAULT_SETTINGS_BUTTON_SELECTOR","num","decimals","isNaN","toFixed","checkDefaultSettingsButton","defaultButton","chrome","storage","local","set","strategySettingsDetected","simulateClick","allButtons","Array","from","querySelectorAll","settingsButton","showNotification","removeChild","element","clickEvent","MouseEvent","bubbles","cancelable","view","dispatchEvent","mouseDownEvent","mouseUpEvent","click","currentX","currentY","initialX","initialY","isDragging","xOffset","yOffset","dragStart","e","type","touches","clientX","clientY","target","dragEnd","windowPosition","top","right","drag","preventDefault","transform","enable","detectStrategySettings","removeEventListener","event","class","dataName","getAttribute","role","ariaLabel","closest","stopPropagation","stopImmediatePropagation","returnValue","matches","buttonIndex","indexOf","message","notification","setTimeout","remove","observeBacktestResults","handleBacktestUpdate","mutations","_step","hasRelevantChanges","_iterator","_createForOfIteratorHelper","s","n","done","mutation","value","parent","parentElement","classList","contains","err","f","results","reportContainer","container","getValuesByTitle","title","_mainDiv$textContent","_additionalDiv$textCo","cell","find","_cell$querySelector","main","additional","secondRow","mainDiv","mainValue","additionalDiv","additionalValue","mainClass","additionalClass","parseValue","removeUSDT","cleaned","replace","parsed","parseFloat","original","afterMinusReplacement","parseInt","hasValidResults","Object","values","some","parseBacktestResults","observer","MutationObserver","clearTimeout","timeout","startObserving","bottomArea","findResultsContainer","observe","childList","subtree","characterData","attributes","disconnect","runtime","onMessage","addListener","request","sender","sendResponse","show","updateInterval","clearInterval","setInterval","get","result"],"sourceRoot":""}